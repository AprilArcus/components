{"componentChunkName":"component---src-layout-default-tsx","path":"/system/color/","result":{"data":{"mdx":{"id":"16a1069f-fb73-5bc1-8448-140cc57ed5a7","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Color\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The color palette aims to help communicate the intent of an interface\\nas well as to help establish clear hierarchy throughout an application.\"), mdx(\"h2\", null, \"Guidelines\"), mdx(\"p\", null, \"These guidelines lay a few ground rules on how to most effectively use color when creating Looker experiences.\"), mdx(\"h3\", null, \"Purposeful\"), mdx(\"p\", null, \"It is important to use color with intent. Color should support the content and not the other way around. Avoid only using color as a way to show intent.\"), mdx(\"h3\", null, \"Respectful\"), mdx(\"p\", null, \"Use color to create hierarchy and focus attention. Understand that color can have different cultural connotations. Be judicious and use color to draw attention to things the user should take action on.\"), mdx(\"h3\", null, \"Accessible\"), mdx(\"p\", null, \"We want Looker to be accessible to the widest audience possible. Our color palettes are designed to meet or exceed the accessibility guidelines.\"), mdx(\"h2\", null, \"Color Palette\"), mdx(ColorPalette, {\n    file: \"XZUILHEQBKTus121SD99nrFN\",\n    page: \"Swatches\",\n    frame: \"contrast\",\n    accessToken: \"16-4ef5a47f-6cd6-4372-95c3-2d581b1d4bbf\",\n    mdxType: \"ColorPalette\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Color"},"tableOfContents":{"items":[{"url":"#guidelines","title":"Guidelines","items":[{"url":"#purposeful","title":"Purposeful"},{"url":"#respectful","title":"Respectful"},{"url":"#accessible","title":"Accessible"}]},{"url":"#color-palette","title":"Color Palette"}]}}},"pageContext":{"id":"16a1069f-fb73-5bc1-8448-140cc57ed5a7"}}}